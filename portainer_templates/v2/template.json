{
    "version": "2",
    "templates": [
        {
            "title": "Heimdall",
            "description": "Heimdall is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/ci-db/docker-lab/main/portainer_templates/images/heimdall-icon.png",
            "repository": {
                "stackfile": "compose-file/applications/heimdall/docker-compose.yaml",
                "url": "https://github.com/ci-db/docker-lab.git"
              },
            "env": [           
                {
                    "name": "PATH_CONFIG",
                    "default": "/var/docker/config/heimdall",
                    "label": "Config Path"

                },
                {
                    "name": "PORT_HTTP",
                    "default": "7021",
                    "label": "Public Port"

                }
                
            ]
        },
        {
            "title": "Paperless",
            "description": "Paperless-ngx is a community-supported open-source document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper.",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/ci-db/docker-lab/main/portainer_templates/images/paperless.png",
            "repository": {
                "stackfile": "compose-file/applications/paperless-ngx/docker-compose.yaml",
                "url": "https://github.com/ci-db/docker-lab.git"
              },
            "env": [
                {
                    "name": "CONTAINER_NAME_BROKER",
                    "default": "paperless_broker",
                    "label": "ContainerName Cache"

                },
                {
                    "name": "CONTAINER_NAME_WEBSERVER",
                    "default": "paperless_webserver",
                    "label": "ContainerName Webserver"

                },
                {
                    "name": "CONTAINER_NAME_DB",
                    "default": "paperless_db",
                    "label": "ContainerName Datenbank"

                },
                {
                    "name": "PATH_DB",
                    "default": "/var/docker/data/paperless-ngx/db",
                    "label": "Path DB Folder"

                },
                {
                    "name": "PATH_MEDIA",
                    "default": "/var/docker/data/paperless-ngx/media",
                    "label": "Path Media Folder"

                },
                {
                    "name": "PATH_DATA",
                    "default": "/var/docker/data/paperless-ngx/data",
                    "label": "Path Data Folder"

                },
                {
                    "name": "PATH_EXPORT",
                    "default": "/var/docker/data/paperless-ngx/export",
                    "label": "Path Export Folder"

                },
                {
                    "name": "PATH_CONSUM",
                    "default": "/var/docker/data/paperless-ngx/consume",
                    "label": "Path Consum Folder"

                },
                {
                    "name": "PAPERLESS_ADMIN_USER",
                    "default": "system",
                    "label": "Admin Username"

                },                
                {
                    "name": "PAPERLESS_ADMIN_MAIL",
                    "default": "system@domain.com",
                    "label": "Admin E-Mail"

                },                
                {
                    "name": "PAPERLESS_ADMIN_PASSWORD",
                    "default": "xxx",
                    "label": "Admin Password"

                },              
                {
                    "name": "PORT_HTTP",
                    "default": "8000",
                    "label": "Public Port"
                },
                {
                    "name": "PAPERLESS_TIME_ZONE",
                    "default": "Europe/Berlin",
                    "label": "TimeZone"
                }                           
                
            ]
        },
        {
            "title": "Syncthing",
            "description": "Syncthing is a continuous file synchronization program. It synchronizes files between two or more computers in real time, safely protected from prying eyes.",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/ci-db/docker-lab/main/portainer_templates/images/syncthing-icon.png",
            "repository": {
                "stackfile": "compose-file/applications/syncthing/docker-compose.yaml",
                "url": "https://github.com/ci-db/docker-lab.git"
              },
            "env": [           
                {
                    "name": "PATH_CONFIG",
                    "default": "/var/docker/config/syncthing",
                    "label": "Config Path"

                },
                {
                    "name": "PATH_DATA1",
                    "default": "/var/docker/data/syncthing/data1",
                    "label": "Data 1 Path"

                },                
                {
                    "name": "PORT_ADMIN",
                    "default": "8384",
                    "label": "Admin Port"

                },
                {
                    "name": "PORT_TCP",
                    "default": "22000",
                    "label": "Public TCP"

                },
                {
                    "name": "PORT_UDP",
                    "default": "22000",
                    "label": "Public UDP"

                },
                {
                    "name": "PORT_BROADCAST",
                    "default": "21027",
                    "label": "Broadcast Port"

                }                                
                
            ]
        },      
        {
            "title": "py-kms",
            "description": "Windows Service",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/ci-db/docker-lab/main/portainer_templates/images/py-kms.png",
            "repository": {
                "stackfile": "compose-file/applications/py-kms/docker-compose.yaml",
                "url": "https://github.com/ci-db/docker-lab.git"
              },
            "env": [      
                {
                    "name": "CONTAINER_NAME",
                    "default": "py-kms",
                    "label": "ContainerName"

                },                     
                {
                    "name": "PATH_DB",
                    "default": "/var/docker/data/py-kms/db",
                    "label": "Database Path"

                },
                {
                    "name": "PORT_HTTP",
                    "default": "4060",
                    "label": "Webserver Port"

                }                               
                
            ]
        }, 
        {
            "title": "goauthentik",
            "description": "authentik is an open-source Identity Provider focused on flexibility and versatility. You can use authentik in an existing environment to add support for new protocols, implement sign-up/recovery/etc. in your application so you don't have to deal with it, and many other things",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/ci-db/docker-lab/main/portainer_templates/images/goauthentik.png",
            "repository": {
                "stackfile": "compose-file/applications/goauthentik/docker-compose.yaml",
                "url": "https://github.com/ci-db/docker-lab.git"
              },
            "env": [ 
                {
                    "name": "SECRET_KEY",
                    "label": "SECRET_KEY",
                    "default": "U9TaaYcRJkFnobaWgH6tSFqaoeu9eGvopoiLQ60gHP9LrVCx"
                },                     
                {
                    "name": "ERROR_REPORTING_ENABLED",
                    "label": "Errors Reports anable",
                    "default": "true"
                },                     
                {
                    "name": "SMTP_HOST",
                    "label": "SMTP Host",
                    "default": ""
                },                     
                {
                    "name": "SMTP_PORT",
                    "label": "SMTP Port",
                    "default": "587"
                },                                        
                {
                    "name": "SMTP_USE_TLS",
                    "label": "Use SMTP TLS",
                    "default": "true"
                },                                        
                {
                    "name": "SMTP_USE_SSL",
                    "label": "SMTP SSL",
                    "default": "false"
                },                                        
                {
                    "name": "SMTP_USERNAME",
                    "label": "SMTP Username"
                },                                        
                {
                    "name": "SMTP_PASSWORD",
                    "label": "SMTP Password"
                },                                        
                {
                    "name": "SMTP_FROM",
                    "label": "SMTP From"
                },                                        
                {
                    "name": "SMTP_TIMEOUT",
                    "label": "SMTP Timeout",
                    "default": "10"
                },                                        
                {
                    "name": "PG_PASS",
                    "label": "Database Password",
                    "default": "nJ5JeAFk5YopW7ooYM4Lp4",
                    "description": "Save Password please"

                },                     
                {
                    "name": "PG_PASS",
                    "label": "Database Password",
                    "default": "nJ5JeAFk5YopW7ooYM4Lp4",
                    "description": "Save Password please"

                },                     
                {
                    "name": "CLIENT_USER",
                    "default": "root",
                    "label": "Run User for Client",
                    "description": "Removing `user: root` also prevents the worker from fixing the permissions on the mounted folders, so when removing this make sure the folders have the correct UID/GID (1000:1000 by default)"
                },   
                {
                    "name": "AUTHENTIK_TAG",
                    "default": "latest",
                    "label": "Docker Tag Version"

                },   
                {
                    "name": "PORT_HTTP",
                    "default": "4053",
                    "label": "HTTP Port"

                },                  
                {
                    "name": "PORT_HTTPS",
                    "default": "4054",
                    "label": "HTTPS Port"

                },                  
                {
                    "name": "CONTAINER_NAME_DATABASE",
                    "default": "goauthentik-database",
                    "label": "ContainerName Database"

                },   
                {
                    "name": "PG_DB",
                    "default": "authentik",
                    "label": "Database Name"
                },                        
                {
                    "name": "PG_USER",
                    "default": "authentik",
                    "label": "Database User"
                },                          
                {
                    "name": "PATH_DB",
                    "default": "/var/docker/data/goauthentik/db",
                    "label": "Database Path"

                },                                      
                {
                    "name": "CONTAINER_NAME_REDIS",
                    "default": "goauthentik-redis",
                    "label": "ContainerName Redis"

                },      
                {
                    "name": "PATH_REDIS",
                    "default": "/var/docker/data/goauthentik/redis",
                    "label": "Redis Path"

                },    
                {
                    "name": "CONTAINER_NAME_SERVER",
                    "default": "goauthentik-server",
                    "label": "ContainerName Server"

                },   
                {
                    "name": "PATH_MEDIA",
                    "default": "/var/docker/data/goauthentik/media",
                    "label": "Media Path"

                },
                {
                    "name": "PATH_TEMPLATES",
                    "default": "/var/docker/config/goauthentik/templates",
                    "label": "Custom Templates Path"

                },                                
                {
                    "name": "CONTAINER_NAME_WORKER",
                    "default": "goauthentik-worker",
                    "label": "ContainerName Worker"

                },   
                {
                    "name": "PATH_CERTS",
                    "default": "/var/docker/data/goauthentik/certs",
                    "label": "Cert Path"

                }                            
                
            ]
        }              
    ]
}